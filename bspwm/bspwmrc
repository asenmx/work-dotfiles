#! /bin/sh

# Start sxhkd if not already running
pgrep -x sxhkd > /dev/null || sxhkd &

# Define desktops for each monitor
bspc monitor 'DP-2' -d 1 2 3 4
bspc monitor 'DP-4' -d 5 6 7 8

# General BSPWM configurations
bspc config borderless_monocle      true
bspc config focus_follows_pointer   true
bspc config pointer_follows_focus   true

bspc config pointer_modifier        control
bspc config pointer_action1         move

# BSPWM appearance configurations
bspc config window_gap               8
bspc config top_padding              40
bspc config top_monocle_padding      0
bspc config border_width             5
bspc config bottom_padding           0
bspc config left_padding             0
bspc config right_padding            0

bspc config normal_border_color           "#4c566a"
bspc config active_border_color	      "#1e1e1e"
bspc config focused_border_color	      "#a85c7c"
bspc config presel_feedback_color	      "#5e81ac"
# Rules for specific applications
bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off
bspc rule -a Pavucontrol state=floating
bspc rule -a Thunar state=floating
bspc rule -a Firefox state=floating

# Keyboard layout configuration
setxkbmap -option grp:alt_shift_toggle,grp_led:scroll us,bg -variant ,phonetic &

# WMName setting for Java applications
[ "$1" = 0 ] && wmname LG3D &

# Start polybar
# Kill existing polybar instances
killall -q polybar

# Wait until processes are shut down
while pgrep -u $UID -x polybar >/dev/null; do sleep 1; done

# Launch both bars
polybar primary &
polybar secondary &

# Start greenclip daemon
pkill greenclip
greenclip daemon &

# Set background image
feh --bg-center ~/.config/background.jpg

# Transparency hack: works by hiding previous focused nodes
manage_node_transparency () {
  PREV_NODE_ID=
  PREV_DESK_ID=
  bspc subscribe node_focus | while read -r _ _ desktop_id node_id; do
    xprop -id "$node_id" -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 1
    if [ "$PREV_DESK_ID" == "$desktop_id" ] && [ "$PREV_NODE_ID" != "$node_id" ]; then
      PREV_LAYOUT=$(bspc query -T -d "$desktop_id" | jq -r .layout)
      [ "$PREV_LAYOUT" == "monocle" ] && xprop -id "$PREV_NODE_ID" -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 0
    fi
    PREV_NODE_ID=$node_id
    PREV_DESK_ID=$desktop_id
  done
}

# Manage Desktop Layout Change
manage_desktop_layout () {
  bspc subscribe desktop_layout | while read -r _ _ desktop_id layout; do
    if [ "$layout" == "tiled" ]; then
      bspc query -N -n .window -d "$desktop_id" | xargs -I % xprop -id % -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 1
    else
      bspc query -N -n .window.!focused -d "$desktop_id" | xargs -I % xprop -id % -f _COMPTON_MONOCLE 32c -set _COMPTON_MONOCLE 0
    fi
  done
}

manage_node_transparency &
manage_desktop_layout &

# Start picom (compositor) with a configuration file if needed
picom --config ~/.config/picom/picom.conf &
nm-applet
